; BEGIN USER INPUT SECTION
; Define RP variables for adjustable time stepping parameters
(rp-var-define 'dt_min 1e-4 'real #f)
(rp-var-define 'dt_max 1e3 'real #f)
(rp-var-define 'f_min 0.95 'real #f)
(rp-var-define 'f_max 1.05 'real #f)
(rp-var-define 'tol 0.001 'real #f)

; Define time interval for autosave
(rp-var-define 'dt_autosave 60 'real #f)

; Define file prefix for autosave
(rp-var-define 'name_prefix "box_t=" 'char #f)
; END USER INPUT SECTION

; Compile and load the autosave function
/define/user-defined/compiled-functions compile swak4fluent yes autosave.c "" ""
/define/user-defined/compiled-functions load swak4fluent

; Read mesh
/file/read-case box.msh

; Turn on energy equation
/define/models/energy yes no no no no

; Turn off flow equations
/solve/set/equations/flow no

; Transient, first order
/define/models/unsteady yes

; Set constant temperature boundary condition
/define/boundary-conditions/wall x1 0 no 0 no yes temperature no 400 no no 1

; Initialize the domain
/solve/initialize/initialize-flow

; Set adaptive time stepping and hook the autosave UDF
/solve/set/adaptive-time-stepping yes yes "autosave::swak4fluent"

; Define additional RP variables needed for autosave
(rp-var-define 'name_ext ".cas" 'char #f)
(rp-var-define 'name "" 'char #f)
(rp-var-define 'write_now 0 'integer #f)

/solve/execute-commands add-edit update-name 1 "time-step" "(rpsetvar 'name (string-append (rpgetvar 'name_prefix) (number->string (rpgetvar 'flow-time)) (rpgetvar 'name_ext)))"
/solve/execute-commands add-edit autosave 1 "time-step" "(if (= 1 (%rpgetvar 'write_now)) (write-case-data (rpgetvar 'name)))"
/solve/execute-commands add-edit update-flag 1 "time-step" "(rpsetvar 'write_now 0)"

/file/write-case-data "box_t=0.cas"
